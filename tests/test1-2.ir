define i32 @add(i32 %t0, i32 %t1)
{
	declare i32 %l2 ; 1:a
	declare i32 %l3 ; 1:b
	declare i32 %l4
	declare i32 %t5
	entry
	%l2 = %t0
	%l3 = %t1
	%t5 = add %l2,%l3
	%l4 = %t5
	br label .L6
.L6:
	exit %l4
}
define i32 @main()
{
	declare i32 %l0
	declare i32 %l1 ; 1:a
	declare i32 %l2 ; 1:b
	declare i32 %l3 ; 1:c
	declare i32* %l4[3][4] ; 1:A
	declare f32 %l5 ; 1:d
	declare f32 %l6 ; 1:e
	declare i32 %t7
	declare i32 %t8
	declare i32 %t9
	declare i32 %t10
	declare i32* %t11
	declare i32 %t13
	declare i32 %t16
	declare i32 %t18
	declare i32 %t20
	entry
	%l1 = 3
	%l2 = 4
	i32 %t7 = call i32 @add(i32 %l1, i32 %l2)
	%l3 = %t7
	%t8 = mul 0,4
	%t9 = add %t8,1
	%t10 = mul %t9,4
	%t11 = add %t10,%l4
	*%t11 = 2
	%l5 = 3.100000
	%l6 = 3.200000
.L12:
	%t13 = icmp gt %l1,0
	bc %t13,   label .L14  label .L21
.L14:
.L15:
	%t16 = icmp lt %l2,5
	bc %t16,   label .L17  label .L19
.L17:
	%t18 = add %l2,1
	%l2 = %t18
.L19:
	%t20 = sub %l1,1
	%l1 = %t20
	br label .L12
.L21:
	%l0 = 0
	br label .L22
.L22:
	exit %l0
}
